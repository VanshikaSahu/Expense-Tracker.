{"version":3,"sources":["Context/GlobalState.js","Components/AddTransaction.jsx","Components/Balance.jsx","Components/Header.jsx","Components/IncomeExpenses.jsx","Components/Transaction.jsx","Components/TransactionList.jsx","App.js","index.js"],"names":["Reducer","state","action","type","transactions","filter","item","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","AddTransaction","useState","text","setText","amount","setAmount","useContext","onSubmit","e","preventDefault","newTransaction","Math","random","className","htmlFor","onChange","target","placeholder","moneyFormattor","num","p","toFixed","split","reverse","reduce","acc","i","orig","Balance","total","map","each","currval","Header","IncomeExpenses","amounts","income","accu","expense","Transaction","props","transaction","sign","onClick","TransactionList","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e885b9d1.chunk.js","sourcesContent":["import React,  {createContext, useReducer} from 'react';\r\n\r\nconst Reducer = (state, action) =>{\r\n    switch(action.type){\r\n        case 'DELETE_TRANSACTION':\r\n            return{\r\n                //with the help of id provided in the payload we can delete the transaction\r\n                ...state, \r\n                transactions: state.transactions.filter(item=>item.id!==action.payload),\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return{\r\n                ...state,\r\n                transactions: [action.payload, ...state.transactions]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n//define initial state and will be used with usereducer.\r\nconst initialState ={\r\n    transactions: [],//global state\r\n}\r\n\r\n//create and export context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Global provider function to make the global data available to all the components \r\n//Global provider component \r\nexport const GlobalProvider = ({children}) =>{\r\n    const [state, dispatch] = useReducer(Reducer, initialState);\r\n\r\n    //Actions \r\n    const deleteTransaction = (id) =>{\r\n        dispatch({\r\n            type: 'DELETE_TRANSACTION',\r\n            payload: id,\r\n        })\r\n    }\r\n\r\n    const AddTransaction = (transactions) =>{\r\n        dispatch({\r\n            type: 'ADD_TRANSACTION',\r\n            payload: transactions,\r\n        })\r\n    }\r\n\r\n    //value by context - \r\n    //children - to all the components that we want to have access to the global data. \r\n    return(\r\n        <GlobalContext.Provider value = {\r\n            {   transactions: state.transactions,\r\n                deleteTransaction,\r\n                AddTransaction,\r\n                //all these functions can be accessed by the components using the context api.\r\n            } \r\n        }>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n}\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const[text, setText] = useState(\"\");//contains text input value\r\n    const[amount, setAmount] = useState(0);\r\n    const{AddTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) =>{\r\n        e.preventDefault();\r\n        const newTransaction = {\r\n            id: Math.random(),\r\n            text,\r\n            amount: +amount,\r\n        }\r\n        AddTransaction(newTransaction);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n          <h3>Add new transaction</h3>\r\n          <form onSubmit={onSubmit}>\r\n              <div className = \"form-control\">\r\n                  <label htmlFor = \"text\">Text</label>\r\n                  <input type = \"text\" value= {text} onChange = {(e)=>{setText(e.target.value)}} placeholder = \"Enter text\" />\r\n              </div>\r\n              <div className = \"form-control\">\r\n                  <label htmlFor = \"text\">Amount <br/> negative-expense, positive-income</label>\r\n                  <input type = \"number\" value = {amount} onChange = {(e)=>{setAmount(e.target.value)}} placeholder = \"Enter amount\"/>\r\n\r\n              </div>\r\n              <button className = \"btn\">Add transaction</button>\r\n\r\n            </form>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTransaction;\r\n","import React, {useContext} from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst moneyFormattor= (num) =>{\r\n    let p = num.toFixed(2).split('.');\r\n    return(\r\n        '$'+ \r\n        p[0].split('').reverse().reduce(function(acc, num, i, orig){\r\n            return num==='-'? acc: num + (i&& !(i%3)?',': '') + acc;\r\n        }, '') + '.' + p[1]\r\n    );\r\n}\r\n\r\n\r\nexport const Balance = () => {\r\n    const{transactions} = useContext(GlobalContext);\r\n    const amount = transactions.map(each => each.amount); \r\n    //calculating amount from transactions state. It contains an array of amounts\r\n    const total = amount.reduce((acc, currval) => acc+currval, 0);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>{moneyFormattor(total)}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport const Header = ()=>{\r\n    return(\r\n        <h2>Expense Tracker</h2>\r\n    ) \r\n}\r\n\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst moneyFormattor= (num) =>{\r\n    let p = num.toFixed(2).split('.');\r\n    return(\r\n        '$'+ \r\n        p[0].split('').reverse().reduce(function(acc, num, i, orig){\r\n            return num==='-'? acc: num + (i&& !(i%3)?',': '') + acc;\r\n        }, '') + '.' + p[1]\r\n    );\r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(each=> each.amount);\r\n    const income = amounts.filter(item => item>0).reduce((accu , currval) => accu+currval, 0);\r\n    const expense = amounts.filter(item=>item<0).reduce((accu, currval)=> accu +currval,0)*-1;\r\n    return (\r\n        <div className = \"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className = \"money plus\">{moneyFormattor(income)}</p>\r\n\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className = \"money minus\">{moneyFormattor(expense)}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useContext} from 'react'\r\nimport { GlobalContext } from '../Context/GlobalState';\r\n\r\nconst moneyFormattor= (num) =>{\r\n    let p = num.toFixed(2).split('.');\r\n    return(\r\n        '$'+ \r\n        p[0].split('').reverse().reduce(function(acc, num, i, orig){\r\n            return num==='-'? acc: num + (i&& !(i%3)?',': '') + acc;\r\n        }, '') + '.' + p[1]\r\n    );\r\n}\r\n\r\nexport const Transaction = (props) => {\r\n    const{deleteTransaction} = useContext(GlobalContext);\r\n    const{transaction} = props;\r\n    const sign = transaction.amount<0? '-':'+';\r\n\r\n    return (\r\n        <li className = {transaction.amount<0? 'minus': 'plus'}>\r\n            {transaction.text} <span>{sign}{moneyFormattor(transaction.amount)}</span> \r\n            <button onClick = {()=>deleteTransaction(transaction.id)}>delete</button>\r\n\r\n        </li>\r\n    )\r\n}\r\n","import React , {useContext} from 'react';\r\nimport { GlobalContext } from '../Context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\n\r\n//to maintain history \r\n\r\nexport const TransactionList = () => {\r\n    const{transactions} = useContext(GlobalContext);\r\n    return (\r\n        <>\r\n            <h3>history</h3>\r\n            <ul className = \"list\">\r\n                {transactions.map(item=>(<Transaction key = {item.id} transaction = {item}/>))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {AddTransaction} from './Components/AddTransaction';\r\nimport {Balance} from './Components/Balance';\r\nimport {Header} from './Components/Header';\r\nimport {IncomeExpenses} from './Components/IncomeExpenses';\r\nimport {TransactionList }from './Components/TransactionList';\r\n\r\nimport {GlobalProvider} from './Context/GlobalState';\r\n//type rafc to get the component\r\n\r\n\r\nconst App = ()=>{\r\n    return(\r\n        <GlobalProvider>\r\n            <Header/>\r\n            <div>\r\n                <Balance/>\r\n                <IncomeExpenses/>\r\n                <TransactionList/>\r\n                <AddTransaction/>\r\n            </div>\r\n\r\n        </GlobalProvider>\r\n    ) \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}